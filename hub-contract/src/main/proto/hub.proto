//
// Protocol buffers definition
//
syntax = "proto3";
package pt.tecnico.bicloin.hub.grpc;

option java_multiple_files = true;

// ping service

message CtrlPingRequest {
  string input = 1;
}

message CtrlPingResponse {
	string output = 1;
}

// balance service

message BalanceRequest {
  string username = 1;
}

message BalanceResponse {
  int32 balance = 1;
}

// top up service

message TopUpRequest {
  string username = 1;
  int32 amount = 2;
  string phone_number = 3;
}

message TopUpResponse {
  int32 balance = 1;
}

// info station service

message InfoStationRequest {
  string station_id = 1;
}

message InfoStationResponse {
  string name = 1;
  double latitude = 2;
  double longitude = 3;
  int32 capacity = 4;
  int32 award = 5;
  int32 bikes = 6;
  int32 pickups = 7;
  int32 deliveries = 8;
}

// locate station service

message LocateStationRequest {
  double latitude = 1;
  double longitude = 2;
  int32 k = 3;
}

message LocateStationResponse {
  repeated string ids = 1;
}

// bike service

message BikeRequest {
  string username = 1;
  double latitude = 2;
  double longitude = 3;
  string station_id = 4;
}

message BikeResponse {
  enum Response {
    OK = 0;
    OUT_OF_RANGE = 1;
    OUT_OF_MONEY = 2;
    ALREADY_HAS_BIKE = 3;
    NO_BIKES_IN_STATION = 4;
    NO_BIKE_REQUESTED = 5;
    STATION_IS_FULL = 6;

  }
  Response response = 1;
}

// sys status service

message SysStatusRequest {
}

message SysStatusResponse {
  message Reply {
    enum Status {
      UP = 0;
      DOWN = 1;
    }
    string path = 1;
    Status status = 2;
  }
  repeated Reply sequence = 1;
}

// reset service

message CtrlResetRequest {
  string password = 1;
}

message CtrlResetResponse {

}

// distance service

message DistanceRequest {
  double lat = 1;
  double lon = 2;
  string station_id = 3;
}

message DistanceResponse {
  int32 distance = 1;
}

service HubService {
  rpc ctrl_ping(CtrlPingRequest) returns (CtrlPingResponse);
  rpc balance(BalanceRequest) returns (BalanceResponse);
  rpc top_up(TopUpRequest) returns (TopUpResponse);
  rpc info_station(InfoStationRequest) returns (InfoStationResponse);
  rpc locate_station(LocateStationRequest) returns (LocateStationResponse);
  rpc bike_up(BikeRequest) returns (BikeResponse);
  rpc bike_down(BikeRequest) returns (BikeResponse);
  rpc sys_status(SysStatusRequest) returns (SysStatusResponse);
  rpc ctrl_reset(CtrlResetRequest) returns (CtrlResetResponse);
  rpc distance(DistanceRequest) returns (DistanceResponse);
}
